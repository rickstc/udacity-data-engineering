2. Databases
- Database - A set of related data and the way it is organized
- Database Management System - computer software that allows users to interact with the databases and proves access to all of the data. 

Codd's 12 rules: https://en.wikipedia.org/wiki/Codd%27s_12_rules
1. All information in a relational database is represented explicitly at the logical level and in exactly one way - by values in tables.

3. Importance of Relational Databases
- Standardization of data model - Once your data is transformed into rows and columns format, your data is standardized and you can query it with SQL
- Flexibility in adding and altering tables - Relational databases gives you flexibility to add tables, alter atables, add and remove data
- Data integrity - Data integrity is the backbone of using a relational database
- Standard Query Language (SQL) - A standard language can be used to access the adta with a predefined language
- Simplicity - Data is systematically stored and modeled in tablular format
- Intuitive Organization - The spreadsheet format is intuitive but intuitive to data modeling in relational databases

4. OLAP vs OLTP
- Online Analytical Processing (OLAP) - Database optimized for these workloads allow for complex analytical and ad hoc queries, including aggregations. These type of databases are optimized for reads.
- Online Transactional Processing (OLTP) - Databases optimized for these workloads allow for less copmlex queries in large volume. The types of queries for these databases are read, insert, update, and delete.

The key difference is A (analytics) vs. T (transactions)

6. Structuring the Database: Normalization
Normalization - to reduce data redundancy and increase data integrity
Denormalization - must be done in read heavy workloads to increase performance

7. Objectives of Normal Form
- To free the database from unwanted insertions, updates & deletion dependencies
- To reduce the need for refactoring the database as new types of data are introduced
- To make the relational model more informative to users
- To make the database neutral to the query statistics

8. Normal Forms
First Normal Form (FNF)
- Atomic values: each cell contains unique and single values
- Be able to add data without altering tables
- Separate different relations into different tables
- Keep relationships between tables together with foreign keys

Second Normal Form (2NF)
- Have reached 1NF
- All columns in the table must rely on the primary key

Third Normal Form (3NF)
- Must be in 2NF
- No transitive dependencies
- Remember, transitive dependencies you are trying to maintain is that to get from A - >, you want to avoid going through B

When to use 3NF:
- When you want to update data, we want to be able to do it in just one place

12. Denormalization
- The process of trying to improve the read performance of a database at the expense of losing some write perfromance by adding redundant copies of data.
JOINS on the database allow for outstanding flexibility but are extremely slow. If you are dealing with heavy reads on your database, you may want to think about denormalizating your tables. You get your data into normalized form, and then you proceed with denormalization. So denormalization comes after normalization.

14. Denormalization vs. Normalization
- Normalization - is about trying to increase data integrity by reducing the number of copies of the data. Data that needs to be added or updated will be done in as few places as possible.
- Denormalization - is trying to increase perfromance by reducing the number of joins between tables (as joins can be slow). Data integrity will take a bit of a potential hit, as there will be more copies of the data (to reduce JOINS).

17. Fact and Dimension Tables
- Work together to create an organized data model
- While fact and dimension are not created differently in the DDL, they are conceptual and extremely important for organization

Fact Tables - consists of the measurements, metrics or facts of a business process.
Dimension - A structure that categorizes facts and measures in order to enable users to answer business questions. Dimensions are people, products, place and time.

Implementing different schemas
Two of the most popular data mart schema for data warehouses are:
- Star schema
- Snowflake schema

18. Star Schemas
- Star Schema is the simplest style of data mart schema. The star schema consists of one or more fact tables referencing any number of dimension tables.

19. Benefits of Star Schemas
- Denormalized
- Simplifies queries
- Fast aggregations

Drawbacks
- Issues that come with denormalization
- Data Integrity (duplicates across tables)
- Decrease query flexibility
- Many to many relationship --simplified

20. Snowflake Schemas
Logical arrangement of tables in a multidimensional database represented by centralized fact tables which are connected to multiple dimensions.

Snowflake vs. Star
- Star schema is a special, simplified case of the snowflake schema.
- Star schema does not allow for one to many relationships while the snowflake schema does.
- Snowflake schema is more normalized than Star schema but only in 1NF or 2NF

24. Data Definition and Constraints
- NOT NULL - column cannot contain a null value
- UNIQUE - data across all the rows in one column are unique within the table
- PRIMARY KEY - defined on a single column, should be present on every table, this combines UNIQUE and NOT NULL

25. Upsert
Upsert refers to the idea of intersting a new row in an existing table or updating the row if it already exists
PostgreSQL handles by using INSERT in combination with ON CONFLICT

INSERT adds new rows into the table
ON CONFLICT DO NOTHING - does NOTHING
ON CONFLICT UPDATE - updates what you tell it to

INSERT INTO customer_address (customer_id, customer_street)
VALUES
    (
    432, '923 Knox Street, Suite 1' 
) 
ON CONFLICT (customer_id) 
DO UPDATE
    SET customer_street  = EXCLUDED.customer_street;

26. Conclusion
What did we learn?
- What is a relational database
- OLAP vs OLTP
- Normalization
- Denormalization
- Fact vs. Dimension Tables
- Star and Snowflake schemas
